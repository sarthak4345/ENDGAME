import java.util.*;
import java.io.*;

public class PassTwo {

	ArrayList<TableRow> SYMTAB = new ArrayList<>();
	ArrayList<TableRow> LITTAB = new ArrayList<>();
	BufferedReader br;
	String line;
	
	public static void main(String[] args) throws IOException {
		
		PassTwo p = new PassTwo();
		
		p.readTables();
		p.generateCode();

	}

	private void readTables() throws IOException {
		
		br = new BufferedReader(new FileReader("SYMTAB.txt"));
		while((line=br.readLine())!= null) {
			
			String parts[] = line.split("\\s+");
			SYMTAB.add(new TableRow(Integer.parseInt(parts[0]),parts[1],Integer.parseInt(parts[2])));
			
		}
		br.close();
		
		br = new BufferedReader(new FileReader("LITTAB.txt"));
		
		while((line=br.readLine())!=null) {
			
			String parts[] = line.split("\\s+");
			LITTAB.add(new TableRow(Integer.parseInt(parts[0]),parts[1],Integer.parseInt(parts[2])));
		}
		br.close();
		System.out.println("SYMTAB");
		for(int i=0;i<SYMTAB.size();i++) 
			System.out.println(SYMTAB.get(i));
		
		System.out.println("LITTAB");
		for(int i=0;i<LITTAB.size();i++) 
			System.out.println(LITTAB.get(i));
	}
	
	private void generateCode() throws IOException {
		
		br = new BufferedReader(new FileReader("IC.txt"));
		BufferedWriter bw = new BufferedWriter(new FileWriter("Pass2.txt"));
		int opcode,regCode,address;
		String code;
		
		while((line=br.readLine())!=null) {
			
			String parts[] = line.split("\\s+");
			
			if(parts[0].contains("AD") || parts[0].contains("(DL,02)")){
				
				bw.write("\n");
			}
			else if(parts.length == 2) {
				
				if(parts[0].contains("DL")) {
					address = Integer.parseInt(parts[1].replaceAll("[^0-9]", ""));
					code = "00\t0\t"+String.format("%03d", address)+"\n";
					bw.write(code);
				
				}else if(parts[0].contains("IS")) {
					
					opcode = Integer.parseInt(parts[0].replaceAll("[^0-9]",""));
					
					if(parts[1].contains("S")) {
						
						int symIndex = Integer.parseInt(parts[1].replaceAll("[^0-9]",""));
						System.out.println(symIndex);
						address = SYMTAB.get(symIndex-1).getAddress();
						code = String.format("%02d",opcode)+"\t0\t"+String.format("%03d", address);
						bw.write(code+"\n");
						
					}else {
						
						int litIndex = Integer.parseInt(parts[1].replaceAll("[^0-9]",""));
						address = LITTAB.get(litIndex-1).getAddress();
						code = String.format("%02d",opcode)+"\t0\t"+String.format("%03d", address);
						bw.write(code+"\n");
					}
					
				}	
			}else if(parts.length == 1 && parts[0].contains("IS")) {
				
				System.out.println("IN STOP");
				bw.write("00\t0\t000");
				
		}else if(parts.length == 3 && parts[0].contains("IS")) {
			
			opcode = Integer.parseInt(parts[0].replaceAll("[^0-9]", ""));
			regCode = Integer.parseInt(parts[1].replaceAll("[^0-9]",""));
			
			if(parts[2].contains("S")) {
				
				int symIndex = Integer.parseInt(parts[2].replaceAll("[^0-9]",""));
				address = SYMTAB.get(symIndex-1).getAddress();
				code = String.format("%02d",opcode)+"\t+"+String.format("%01d", regCode)+"\t"String.format("%03d", address)+"\n";
				bw.write(code);
				
			}else {
				
				int litIndex = Integer.parseInt(parts[2].replaceAll("[^0-9]",""));
				address = LITTAB.get(litIndex-1).getAddress();
				code = String.format("%02d",opcode)+"\t+"+String.format("%01d", regCode)+"\t"String.format("%03d", address)+"\n";
				bw.write(code);
				
			}
			
	}
		
		bw.close();
		
		
		
		
		
		
		
	}

}
