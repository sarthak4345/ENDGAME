import java.util.*;
import java.io.*;


public class MacroTwo {

	public static void main(String[] args) throws IOException {
		
		BufferedReader mntReader = new BufferedReader(new FileReader("MNT.txt"));
		BufferedReader mdtReader = new BufferedReader(new FileReader("MDT.txt"));
		BufferedReader kpdtReader = new BufferedReader(new FileReader("KPDT.txt"));
		BufferedReader ic = new BufferedReader(new FileReader("IC.txt"));
		BufferedWriter fr = new BufferedWriter(new FileWriter("EXPANSION.txt"));
		
		LinkedHashMap<String,MNTEntry>mnt = new LinkedHashMap<>();
		LinkedHashMap<Integer,String>aptab = new LinkedHashMap<>();
		LinkedHashMap<String,Integer>aptabInverse = new LinkedHashMap<>();
		Vector<String> kpdt = new Vector<>();
		Vector<String> mdt = new Vector<>();
		String line;
		
		while((line = mntReader.readLine()) != null) {
			
			String parts[] = line.split("\\s+");
			mnt.put(parts[0], new MNTEntry(Integer.parseInt(parts[1]),Integer.parseInt(parts[2]),Integer.parseInt(parts[3]),Integer.parseInt(parts[4])));
		}
		
		while((line=mdtReader.readLine())!=null) {
			mdt.add(line);
		}
		while((line=kpdtReader.readLine())!=null) {
			kpdt.add(line);
		}
		
		mntReader.close();
		mdtReader.close();
		kpdtReader.close();
		int pp,kp,mdtp,kpdtp;
		int paramNo;
		
		while((line = ic.readLine())!=null) {
			
			String parts[] = line.split("\\s+");
			
			if(mnt.containsKey(parts[0])) {
				
				pp = mnt.get(parts[0]).getPp();
				kp = mnt.get(parts[0]).getKp();
				kpdtp = mnt.get(parts[0]).getKpdtp();
				mdtp = mnt.get(parts[0]).getMdtp();
				paramNo = 1;
				for(int i=0;i<pp;i++) {
					parts[paramNo] = parts[paramNo].replaceAll(",","");
					aptab.put(paramNo, parts[paramNo]);
					aptabInverse.put(parts[paramNo], paramNo);
					paramNo++;
				}
				
				int j=kpdtp-1;
				for(int i=0;i<kp;i++) {
					String splits[] = kpdt.get(j).split("\\s+");
					aptab.put(paramNo, splits[1]);
					aptabInverse.put(splits[0], paramNo);
					paramNo++;
					j++;
				}
				
				for(int i=pp+1;i<parts.length;i++) {
					
					parts[i] = parts[i].replaceAll(",","");
					String splits[] = parts[i].split("=");
					String name = splits[0].replaceAll("&", "");
					aptab.put(aptabInverse.get(name), splits[1]);
						
				
				}
				
				System.out.println("APTAB");
				Iterator<Integer> itr = aptab.keySet().iterator();
				while(itr.hasNext()) {
					int temp = itr.next();
					System.out.println(aptab.get(temp));
				}
			
			j = mdtp-1;
			while(!mdt.get(j).equalsIgnoreCase("MEND")) {
				String splits[] = mdt.get(j).split("\\s+");
				
				fr.write("+");
				for(int k=0;k<splits.length;k++) {
					
					if(splits[k].contains("(P,")) {
						
						splits[k] = splits[k].replaceAll("[^0-9]","");
						String actualValue = aptab.get(Integer.parseInt(splits[k]));
						fr.write(actualValue+"\t");
						
					}else {
						fr.write(splits[k]+"\t");
					}
				}
				fr.write("\n");
				j++;
			}
				aptab.clear();
				
			}else {
				
				fr.write(line+"\n");
			}
			
		}
		
	}

}
